[
  {
    "id": "JS-EVAL-001",
    "file": "sample_vuln_js.js",
    "line": 222,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "Use of eval() can lead to code injection.",
    "suggestion": "Avoid eval(); use JSON.parse or pre-defined function maps.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "Insecure \"deserialization\" via eval (CWE-94 / CWE-502)",
    "detected_by": "Regex"
  },
  {
    "id": "JS-EVAL-001",
    "file": "sample_vuln_js.js",
    "line": 229,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use safe parsers or functions.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const obj = eval('(' + payload + ')'); // dangerous",
    "detected_by": "Context-AST"
  },
  {
    "id": "js-child-process-exec",
    "file": "sample_vuln_js.js",
    "line": 141,
    "severity": "CRITICAL",
    "category": "Code-Execution",
    "message": "Use of child_process.exec() with user input may allow remote command execution.",
    "suggestion": "Use safer alternatives like execFile with strict input validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "child_process.exec(cmd, { timeout: 2000 }, (err, stdout, stderr) => {",
    "detected_by": "Regex"
  },
  {
    "id": "JS-WEAK-HASH",
    "file": "sample_vuln_js.js",
    "line": 246,
    "severity": "HIGH",
    "category": "Cryptography",
    "message": "Weak hashing algorithm used.",
    "suggestion": "Use SHA-256 or stronger.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "CWE-327,CWE-328",
    "snippet": "const weakHash = crypto.createHash('md5').update(password).digest('hex'); // weak: MD5",
    "detected_by": "AST"
  },
  {
    "id": "JS-WEAK-HASH",
    "file": "sample_vuln_js.js",
    "line": 256,
    "severity": "HIGH",
    "category": "Cryptography",
    "message": "Weak hashing algorithm used.",
    "suggestion": "Use SHA-256 or stronger.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "CWE-327,CWE-328",
    "snippet": "const weakHash = crypto.createHash('md5').update(password).digest('hex');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 317,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A05:2021-SecurityMisconfiguration,A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log('Vulnerable Express app running on http://0.0.0.0:3000');",
    "detected_by": "AST"
  },
  {
    "id": "js-insecure-jwt-decode",
    "file": "sample_vuln_js.js",
    "line": 196,
    "severity": "HIGH",
    "category": "Authentication",
    "message": "Using jwt.decode() without verifying the signature is insecure.",
    "suggestion": "Use jwt.verify() instead of jwt.decode() for authentication flows.",
    "owasp": "A02:2021-CryptographicFailures,A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "",
    "snippet": "const decoded = jwt.decode(token, { complete: true }); // does NOT verify signature",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-UNSAFE-FILE-UPLOAD-STRICT",
    "file": "sample_vuln_js.js",
    "line": 165,
    "severity": "HIGH",
    "category": "Unsafe File Upload",
    "message": "File upload using multer with no fileFilter \u2192 Unsafe file upload.",
    "suggestion": "Use multer fileFilter to restrict uploads to allowed MIME types.",
    "owasp": "",
    "cwe": "",
    "snippet": "const upload = multer({ dest: 'uploads/' }); // no file type checking",
    "detected_by": "Regex"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 14,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "* - Hardcoded credentials and secrets (CWE-798)",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 35,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "",
    "snippet": "const jwt = require('jsonwebtoken');",
    "detected_by": "AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 45,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "// Hardcoded weak secret (CWE-798)",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 46,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "const SECRET = \"hardcoded_secret_123\";",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 54,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "DB.run(`CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT UNIQUE, password TEXT, role TEXT)`);",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 57,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "DB.run(`INSERT INTO users (username, password, role) VALUES ('admin', 'admin', 'admin')`);",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 82,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "<li>/jwt_validate?token=  (Insecure JWT handling)</li>",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 190,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "Demonstration of trusting unsigned tokens (no signature verification)",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 193,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "const token = req.query.token || '';",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 197,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "",
    "snippet": "if (!decoded) return res.status(400).send('invalid token');",
    "detected_by": "AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 198,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "// If an attacker supplies alg=none and crafts token, this naive trust will accept it",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 238,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "Plaintext passwords, weak hashing example",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 243,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "const { username, password } = req.body || {};",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 244,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "",
    "snippet": "if (!username || !password) return res.status(400).send('missing');",
    "detected_by": "AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 247,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "DB.run(`INSERT INTO users (username, password, role) VALUES (?, ?, ?)`, [username, weakHash, 'user'], function(err) {",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 254,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "const { username, password } = req.body || {};",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 255,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "",
    "snippet": "if (!username || !password) return res.status(400).send('missing');",
    "detected_by": "AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 257,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "DB.get(`SELECT id, username, password FROM users WHERE username = ?`, [username], (err, row) => {",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 261,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "if (row.password === weakHash) {",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 297,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "// leak stack and secret",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "sample_vuln_js.js",
    "line": 298,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "res.status(500).send(`Error: ${e.stack} - secret=${SECRET}`);",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-007",
    "file": "sample_vuln_js.js",
    "line": 303,
    "severity": "LOW",
    "category": "Suspicious Comments",
    "message": "Suspicious comment keyword found.",
    "suggestion": "Review and resolve temporary or insecure code.",
    "owasp": "A05:2021-SecurityMisconfiguration,A10:2021-Logging&MonitoringFailures",
    "cwe": "",
    "snippet": "Insecure temporary file writing (CWE-377)",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 305,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A05:2021-SecurityMisconfiguration,A10:2021-Logging&MonitoringFailures",
    "cwe": "",
    "snippet": "app.get('/tempfile', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TEMP-FILE-002",
    "file": "sample_vuln_js.js",
    "line": 309,
    "severity": "HIGH",
    "category": "Insecure Temporary File",
    "message": "Temporary file written to predictable path \u2192 possible data leakage or overwrite.",
    "suggestion": "Use secure random filenames or temp directories.",
    "owasp": "A05:2021-SecurityMisconfiguration,A10:2021-Logging&MonitoringFailures",
    "cwe": "",
    "snippet": "fs.writeFileSync(p, 'temporary data');",
    "detected_by": "Context-AST"
  },
  {
    "id": "GEN-HEUR-016",
    "file": "sample_vuln_js.js",
    "line": 307,
    "severity": "LOW",
    "category": "Temporary Files",
    "message": "Use of temporary files detected.",
    "suggestion": "Ensure temporary files are not world-accessible.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "// predictable tmp path, no safe handling",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 308,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "const p = path.join('/tmp', name);",
    "detected_by": "AST"
  },
  {
    "id": "JS-NO-RATE-LIMITING-001",
    "file": "sample_vuln_js.js",
    "line": 40,
    "severity": "HIGH",
    "category": "No Rate Limiting",
    "message": "No rate limiting middleware detected \u2192 Potential DoS risk.",
    "suggestion": "Add rate limiting middleware like express-rate-limit to prevent abuse.",
    "owasp": "",
    "cwe": "",
    "snippet": "app.use(bodyParser.json());",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-NO-RATE-LIMITING-001",
    "file": "sample_vuln_js.js",
    "line": 41,
    "severity": "HIGH",
    "category": "No Rate Limiting",
    "message": "No rate limiting middleware detected \u2192 Potential DoS risk.",
    "suggestion": "Add rate limiting middleware like express-rate-limit to prevent abuse.",
    "owasp": "",
    "cwe": "",
    "snippet": "app.use(cookieParser());",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-NO-RATE-LIMITING-001",
    "file": "sample_vuln_js.js",
    "line": 49,
    "severity": "HIGH",
    "category": "No Rate Limiting",
    "message": "No rate limiting middleware detected \u2192 Potential DoS risk.",
    "suggestion": "Add rate limiting middleware like express-rate-limit to prevent abuse.",
    "owasp": "",
    "cwe": "",
    "snippet": "app.use(cors({ origin: '*' }));",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 27,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const express = require('express');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 28,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const bodyParser = require('body-parser');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 29,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const cors = require('cors');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 30,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const sqlite3 = require('sqlite3').verbose();",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 31,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const child_process = require('child_process');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 32,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const fs = require('fs');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 33,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const path = require('path');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 34,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const multer = require('multer');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 36,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const yaml = require('js-yaml');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 37,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const cookieParser = require('cookie-parser');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 71,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 93,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/search', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 107,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/xss', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 117,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/notes/add', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 123,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "res.send('Note added');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 127,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/notes', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 131,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "res.send(`<h2>Notes</h2>` + rows.map(r => `<div>${r.content}</div>`).join(''));",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 138,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/exec', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 152,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/download', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 166,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.post('/upload', upload.single('file'), (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 174,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const https = require('https');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 175,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const http = require('http');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 176,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/fetch', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 178,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if (!url) return res.send('Provide ?url=');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 180,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const client = url.startsWith('https') ? https : http;",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 181,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "client.get(url, (resp) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 183,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "resp.on('data', chunk => data += chunk.toString());",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 184,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "resp.on('end', () => res.send(data));",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 192,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/jwt_validate', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 209,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/yaml_load', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 211,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if (!data) return res.send('Provide ?data=<yaml>');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 225,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.post('/deserialize', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 240,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const crypto = require('crypto');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 242,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.post('/register', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 253,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.post('/login', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 259,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if (!row) return res.status(401).send('bad');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 263,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "res.cookie('auth', `user:${row.id}`, { httpOnly: false, secure: false });",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 265,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "} else res.status(401).send('bad');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 272,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/redir', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 281,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/transfer', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 291,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/leaky', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "sample_vuln_js.js",
    "line": 294,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const x = JSON.parse('not-json');",
    "detected_by": "AST"
  }
]